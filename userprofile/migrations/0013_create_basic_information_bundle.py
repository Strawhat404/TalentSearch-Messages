# Generated by Django 5.2.1 on 2025-06-21 20:35

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("userprofile", "0012_make_id_photos_optional"),
    ]

    operations = [
        migrations.AlterField(
            model_name="personalinfo",
            name="id_type",
            field=models.CharField(
                choices=[
                    ("national_id", "National ID"),
                    ("passport", "Passport"),
                    ("drivers_license", "Driver's License"),
                ],
                max_length=20,
            ),
        ),
        migrations.CreateModel(
            name="BasicInformation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nationality",
                    models.CharField(
                        help_text="Nationality (required)", max_length=100
                    ),
                ),
                (
                    "gender",
                    models.CharField(help_text="Gender (required)", max_length=20),
                ),
                (
                    "languages",
                    models.JSONField(
                        default=list,
                        help_text="List of languages and proficiency levels (required)",
                    ),
                ),
                (
                    "hair_color",
                    models.CharField(help_text="Hair color (required)", max_length=50),
                ),
                (
                    "eye_color",
                    models.CharField(help_text="Eye color (required)", max_length=50),
                ),
                (
                    "skin_tone",
                    models.CharField(help_text="Skin tone (required)", max_length=50),
                ),
                (
                    "body_type",
                    models.CharField(help_text="Body type (required)", max_length=50),
                ),
                (
                    "medical_conditions",
                    models.JSONField(
                        default=list, help_text="List of health conditions (required)"
                    ),
                ),
                (
                    "medicine_types",
                    models.JSONField(
                        default=list, help_text="List of medications (required)"
                    ),
                ),
                (
                    "marital_status",
                    models.CharField(
                        choices=[
                            ("single", "Single"),
                            ("married", "Married"),
                            ("divorced", "Divorced"),
                            ("widowed", "Widowed"),
                        ],
                        help_text="Marital status (required)",
                        max_length=20,
                    ),
                ),
                (
                    "hobbies",
                    models.JSONField(
                        default=list, help_text="List of hobbies (required)"
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(help_text="Date of birth (required)"),
                ),
                (
                    "height",
                    models.DecimalField(
                        decimal_places=1,
                        help_text="Height in centimeters (required)",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(
                                100, message="Height must be at least 100 cm"
                            ),
                            django.core.validators.MaxValueValidator(
                                300, message="Height cannot exceed 300 cm"
                            ),
                        ],
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=1,
                        help_text="Weight in kilograms (required)",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(
                                30, message="Weight must be at least 30 kg"
                            ),
                            django.core.validators.MaxValueValidator(
                                500, message="Weight cannot exceed 500 kg"
                            ),
                        ],
                    ),
                ),
                (
                    "emergency_contact_name",
                    models.CharField(
                        help_text="Emergency contact person's name (required)",
                        max_length=100,
                    ),
                ),
                (
                    "emergency_contact_phone",
                    models.CharField(
                        help_text="Emergency contact phone number (required)",
                        max_length=20,
                    ),
                ),
                (
                    "custom_hobby",
                    models.CharField(
                        blank=True,
                        help_text="Custom hobby if not in the predefined list",
                        max_length=100,
                    ),
                ),
                ("has_driving_license", models.BooleanField(default=False)),
                ("has_visible_piercings", models.BooleanField(default=False)),
                ("has_visible_tattoos", models.BooleanField(default=False)),
                ("willing_to_travel", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "profile",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="basic_information",
                        to="userprofile.profile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Basic Information",
                "verbose_name_plural": "Basic Information",
            },
        ),
    ]
