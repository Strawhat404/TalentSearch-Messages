# Generated by Django 5.2.1 on 2025-06-27 12:10

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import userprofile.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("userprofile", "0017_education_created_at_education_updated_at_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="ActorCategory",
            fields=[
                (
                    "id",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=100)),
            ],
            options={
                "verbose_name": "Actor Category",
                "verbose_name_plural": "Actor Categories",
            },
        ),
        migrations.CreateModel(
            name="InfluencerCategory",
            fields=[
                (
                    "id",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=100)),
            ],
            options={
                "verbose_name": "Influencer Category",
                "verbose_name_plural": "Influencer Categories",
            },
        ),
        migrations.CreateModel(
            name="MainSkill",
            fields=[
                (
                    "id",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=100)),
            ],
            options={
                "verbose_name": "Main Skill",
                "verbose_name_plural": "Main Skills",
            },
        ),
        migrations.CreateModel(
            name="ModelCategory",
            fields=[
                (
                    "id",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=100)),
            ],
            options={
                "verbose_name": "Model Category",
                "verbose_name_plural": "Model Categories",
            },
        ),
        migrations.CreateModel(
            name="PerformerCategory",
            fields=[
                (
                    "id",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=100)),
            ],
            options={
                "verbose_name": "Performer Category",
                "verbose_name_plural": "Performer Categories",
            },
        ),
        migrations.CreateModel(
            name="Profession",
            fields=[
                (
                    "id",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=100)),
            ],
            options={
                "verbose_name": "Profession",
                "verbose_name_plural": "Professions",
            },
        ),
        migrations.CreateModel(
            name="Skill",
            fields=[
                (
                    "id",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=100)),
            ],
            options={
                "verbose_name": "Skill",
                "verbose_name_plural": "Skills",
            },
        ),
        migrations.RemoveField(
            model_name="workexperience",
            name="profile",
        ),
        migrations.AlterModelOptions(
            name="identityverification",
            options={
                "verbose_name": "ID Verification",
                "verbose_name_plural": "ID Verification",
            },
        ),
        migrations.AlterModelOptions(
            name="media",
            options={"verbose_name": "Media", "verbose_name_plural": "Media"},
        ),
        migrations.RemoveField(
            model_name="education",
            name="certifications",
        ),
        migrations.RemoveField(
            model_name="media",
            name="natural_photo_1",
        ),
        migrations.RemoveField(
            model_name="media",
            name="natural_photo_1_processed",
        ),
        migrations.RemoveField(
            model_name="media",
            name="natural_photo_2",
        ),
        migrations.RemoveField(
            model_name="media",
            name="natural_photo_2_processed",
        ),
        migrations.RemoveField(
            model_name="media",
            name="photo",
        ),
        migrations.RemoveField(
            model_name="media",
            name="photo_processed",
        ),
        migrations.RemoveField(
            model_name="personalinfo",
            name="custom_social_media",
        ),
        migrations.RemoveField(
            model_name="personalinfo",
            name="id_number",
        ),
        migrations.RemoveField(
            model_name="personalinfo",
            name="id_type",
        ),
        migrations.RemoveField(
            model_name="personalinfo",
            name="social_media",
        ),
        migrations.AlterField(
            model_name="identityverification",
            name="id_back",
            field=models.ImageField(
                default=1,
                help_text="Back photo of ID document (required)",
                upload_to="id_backs/",
                validators=[
                    django.core.validators.FileExtensionValidator(
                        allowed_extensions=["jpg", "jpeg", "png", "gif"]
                    )
                ],
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="identityverification",
            name="id_front",
            field=models.ImageField(
                default=django.utils.timezone.now,
                help_text="Front photo of ID document (required)",
                upload_to="id_fronts/",
                validators=[
                    django.core.validators.FileExtensionValidator(
                        allowed_extensions=["jpg", "jpeg", "png", "gif"]
                    )
                ],
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="identityverification",
            name="id_type",
            field=userprofile.models.CaseInsensitiveCharField(
                help_text="Type of identification document (National ID, Passport, Driving License)",
                max_length=50,
            ),
        ),
        migrations.CreateModel(
            name="Experience",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "experience_level",
                    models.JSONField(
                        default=list, help_text="Selected experience levels"
                    ),
                ),
                (
                    "years",
                    models.JSONField(
                        default=list, help_text="Selected years of experience"
                    ),
                ),
                (
                    "availability",
                    models.JSONField(
                        default=list, help_text="Selected availability options"
                    ),
                ),
                (
                    "employment_status",
                    models.JSONField(
                        default=list, help_text="Selected employment statuses"
                    ),
                ),
                (
                    "work_location",
                    models.JSONField(default=list, help_text="Selected work locations"),
                ),
                (
                    "shift",
                    models.JSONField(
                        default=list, help_text="Selected shift preferences"
                    ),
                ),
                (
                    "skill_videos_url",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of skill video URLs (not required)",
                    ),
                ),
                (
                    "experience_description",
                    models.TextField(
                        blank=True,
                        help_text="Detailed description of experience (not required)",
                    ),
                ),
                (
                    "industry_experience",
                    models.TextField(
                        blank=True,
                        help_text="Industry-specific experience details (not required)",
                    ),
                ),
                (
                    "previous_employers",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of previous employers (not required)",
                    ),
                ),
                (
                    "portfolio_url",
                    models.URLField(
                        blank=True, help_text="Portfolio URL (required for Cameraman)"
                    ),
                ),
                (
                    "training_workshops",
                    models.TextField(
                        blank=True,
                        help_text="Training and workshops attended (not required)",
                    ),
                ),
                (
                    "union_membership",
                    models.TextField(
                        blank=True, help_text="Union membership details (not required)"
                    ),
                ),
                (
                    "certifications",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of certifications (not required)",
                    ),
                ),
                (
                    "salary_range_min",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Minimum salary expectation (not required)",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "salary_range_max",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Maximum salary expectation (not required)",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "video_links",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of video links (required for Voice Over)",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "profile",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="experience",
                        to="userprofile.profile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Experience",
                "verbose_name_plural": "Experience",
            },
        ),
        migrations.CreateModel(
            name="Headshot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "professional_headshot",
                    models.ImageField(
                        blank=True,
                        help_text="Professional headshot (required). Must be JPG/PNG/JPEG format, minimum 800px width, maximum 2000px width.",
                        null=True,
                        upload_to="headshots/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "jpeg", "png"]
                            ),
                            django.core.validators.MinValueValidator(
                                800, message="Image width must be at least 800 pixels"
                            ),
                            django.core.validators.MaxValueValidator(
                                2000, message="Image width must not exceed 2000 pixels"
                            ),
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "profile",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="headshot",
                        to="userprofile.profile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Headshot",
                "verbose_name_plural": "Headshots",
            },
        ),
        migrations.CreateModel(
            name="NaturalPhotos",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "natural_photo_1",
                    models.ImageField(
                        blank=True,
                        help_text="First natural photo (required). Must be JPG/PNG/JPEG format, minimum 800px width, maximum 2000px width.",
                        null=True,
                        upload_to="natural_photos/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "jpeg", "png"]
                            ),
                            django.core.validators.MinValueValidator(
                                800, message="Image width must be at least 800 pixels"
                            ),
                            django.core.validators.MaxValueValidator(
                                2000, message="Image width must not exceed 2000 pixels"
                            ),
                        ],
                    ),
                ),
                (
                    "natural_photo_2",
                    models.ImageField(
                        blank=True,
                        help_text="Second natural photo (required). Must be JPG/PNG/JPEG format, minimum 800px width, maximum 2000px width.",
                        null=True,
                        upload_to="natural_photos/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "jpeg", "png"]
                            ),
                            django.core.validators.MinValueValidator(
                                800, message="Image width must be at least 800 pixels"
                            ),
                            django.core.validators.MaxValueValidator(
                                2000, message="Image width must not exceed 2000 pixels"
                            ),
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "profile",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="natural_photos",
                        to="userprofile.profile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Natural Photos",
                "verbose_name_plural": "Natural Photos",
            },
        ),
        migrations.CreateModel(
            name="ProfessionsAndSkills",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_actor",
                    models.BooleanField(default=False, help_text="Actor profession"),
                ),
                (
                    "is_model",
                    models.BooleanField(default=False, help_text="Model profession"),
                ),
                (
                    "is_performer",
                    models.BooleanField(
                        default=False, help_text="Performer profession"
                    ),
                ),
                (
                    "is_host",
                    models.BooleanField(default=False, help_text="Host profession"),
                ),
                (
                    "is_influencer",
                    models.BooleanField(
                        default=False, help_text="Influencer profession"
                    ),
                ),
                (
                    "is_voice_over",
                    models.BooleanField(
                        default=False, help_text="Voice Over profession"
                    ),
                ),
                (
                    "is_cameraman",
                    models.BooleanField(
                        default=False, help_text="Cameraman profession"
                    ),
                ),
                (
                    "is_presenter",
                    models.BooleanField(
                        default=False, help_text="Presenter profession"
                    ),
                ),
                (
                    "is_stuntman",
                    models.BooleanField(default=False, help_text="Stuntman profession"),
                ),
                (
                    "professions",
                    models.JSONField(
                        default=list,
                        help_text="Selected professions (minimum 1 required)",
                    ),
                ),
                (
                    "actor_category",
                    models.JSONField(
                        default=list, help_text="Selected actor categories"
                    ),
                ),
                (
                    "model_categories",
                    models.JSONField(
                        default=list, help_text="Selected model categories"
                    ),
                ),
                (
                    "performer_categories",
                    models.JSONField(
                        default=list, help_text="Selected performer categories"
                    ),
                ),
                (
                    "influencer_categories",
                    models.JSONField(
                        default=list, help_text="Selected influencer categories"
                    ),
                ),
                ("skills", models.JSONField(default=list, help_text="Selected skills")),
                (
                    "main_skill",
                    models.JSONField(default=list, help_text="Selected main skills"),
                ),
                (
                    "skill_description",
                    models.TextField(
                        blank=True, help_text="Detailed description of skills"
                    ),
                ),
                (
                    "video_url",
                    models.URLField(blank=True, help_text="URL to showcase video"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "profile",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="professions_and_skills",
                        to="userprofile.profile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Professions & Skills",
                "verbose_name_plural": "Professions & Skills",
            },
        ),
        migrations.CreateModel(
            name="SocialMedia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "instagram_username",
                    userprofile.models.CaseInsensitiveCharField(
                        blank=True, help_text="Instagram username", max_length=100
                    ),
                ),
                (
                    "instagram_followers",
                    models.PositiveIntegerField(
                        default=0, help_text="Instagram followers count"
                    ),
                ),
                (
                    "facebook_username",
                    userprofile.models.CaseInsensitiveCharField(
                        blank=True, help_text="Facebook username", max_length=100
                    ),
                ),
                (
                    "facebook_followers",
                    models.PositiveIntegerField(
                        default=0, help_text="Facebook followers count"
                    ),
                ),
                (
                    "youtube_username",
                    userprofile.models.CaseInsensitiveCharField(
                        blank=True, help_text="YouTube username", max_length=100
                    ),
                ),
                (
                    "youtube_followers",
                    models.PositiveIntegerField(
                        default=0, help_text="YouTube followers count"
                    ),
                ),
                (
                    "tiktok_username",
                    userprofile.models.CaseInsensitiveCharField(
                        blank=True, help_text="TikTok username", max_length=100
                    ),
                ),
                (
                    "tiktok_followers",
                    models.PositiveIntegerField(
                        default=0, help_text="TikTok followers count"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "profile",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_media",
                        to="userprofile.profile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Social Media",
                "verbose_name_plural": "Social Media",
            },
        ),
        migrations.DeleteModel(
            name="ProfessionalQualifications",
        ),
        migrations.DeleteModel(
            name="WorkExperience",
        ),
    ]
