# Generated by Django 5.2.1 on 2025-06-02 11:53

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="LocationData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("region_id", models.CharField(max_length=50, unique=True)),
                ("region_name", models.CharField(max_length=100)),
                ("cities", models.JSONField()),
            ],
            options={
                "verbose_name": "Location Data",
                "verbose_name_plural": "Location Data",
            },
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                (
                    "birthdate",
                    models.DateField(
                        blank=True, help_text="Date of birth (required)", null=True
                    ),
                ),
                ("profession", models.CharField(max_length=100)),
                ("nationality", models.CharField(max_length=50)),
                ("location", models.CharField(blank=True, max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("availability_status", models.BooleanField(default=True)),
                ("verified", models.BooleanField(default=False)),
                ("flagged", models.BooleanField(default=False)),
                ("status", models.CharField(blank=True, max_length=50)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProfessionalQualifications",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("experience_level", models.CharField(blank=True, max_length=50)),
                ("skills", models.JSONField(default=list)),
                ("work_authorization", models.CharField(blank=True, max_length=100)),
                ("industry_experience", models.CharField(blank=True, max_length=100)),
                (
                    "min_salary",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "max_salary",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("availability", models.CharField(blank=True, max_length=50)),
                (
                    "preferred_work_location",
                    models.CharField(blank=True, max_length=50),
                ),
                ("shift_preference", models.CharField(blank=True, max_length=50)),
                (
                    "willingness_to_relocate",
                    models.CharField(blank=True, max_length=50),
                ),
                ("overtime_availability", models.CharField(blank=True, max_length=50)),
                (
                    "travel_willingness",
                    models.BooleanField(
                        default=False, help_text="Are you willing to travel?"
                    ),
                ),
                ("software_proficiency", models.JSONField(default=list)),
                ("typing_speed", models.IntegerField(blank=True, null=True)),
                ("driving_skills", models.CharField(blank=True, max_length=100)),
                ("equipment_experience", models.JSONField(default=list)),
                ("role_title", models.CharField(blank=True, max_length=100)),
                ("portfolio_url", models.URLField(blank=True, null=True)),
                ("union_membership", models.CharField(blank=True, max_length=100)),
                ("reference", models.JSONField(default=list)),
                ("available_start_date", models.DateField(blank=True, null=True)),
                ("preferred_company_size", models.CharField(blank=True, max_length=50)),
                ("preferred_industry", models.JSONField(default=list)),
                ("leadership_style", models.CharField(blank=True, max_length=50)),
                ("communication_style", models.CharField(blank=True, max_length=50)),
                ("motivation", models.CharField(blank=True, max_length=100)),
                ("has_driving_license", models.BooleanField(default=False)),
                (
                    "profile",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="professional_qualifications",
                        to="userprofile.profile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PhysicalAttributes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Weight in kilograms",
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(
                                30, message="Weight must be at least 30 kg"
                            ),
                            django.core.validators.MaxValueValidator(
                                500, message="Weight cannot exceed 500 kg"
                            ),
                        ],
                    ),
                ),
                (
                    "height",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Height in centimeters",
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(
                                100, message="Height must be at least 100 cm"
                            ),
                            django.core.validators.MaxValueValidator(
                                300, message="Height cannot exceed 300 cm"
                            ),
                        ],
                    ),
                ),
                ("gender", models.CharField(blank=True, max_length=20)),
                ("hair_color", models.CharField(blank=True, max_length=50)),
                ("eye_color", models.CharField(blank=True, max_length=50)),
                ("body_type", models.CharField(blank=True, max_length=50)),
                ("skin_tone", models.CharField(blank=True, max_length=50)),
                ("facial_hair", models.CharField(blank=True, max_length=50)),
                ("tattoos_visible", models.BooleanField(default=False)),
                ("piercings_visible", models.BooleanField(default=False)),
                ("physical_condition", models.CharField(blank=True, max_length=50)),
                (
                    "profile",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="physical_attributes",
                        to="userprofile.profile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PersonalInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("marital_status", models.CharField(blank=True, max_length=50)),
                ("ethnicity", models.CharField(blank=True, max_length=50)),
                ("personality_type", models.CharField(blank=True, max_length=50)),
                ("work_preference", models.CharField(blank=True, max_length=50)),
                ("hobbies", models.JSONField(default=list)),
                (
                    "custom_hobby",
                    models.CharField(
                        blank=True,
                        help_text="Custom hobby (required)",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("volunteer_experience", models.CharField(blank=True, max_length=50)),
                (
                    "company_culture_preference",
                    models.CharField(blank=True, max_length=100),
                ),
                ("social_media_links", models.JSONField(default=dict)),
                ("social_media_handles", models.JSONField(default=list)),
                ("language_proficiency", models.JSONField(default=list)),
                ("special_skills", models.JSONField(default=list)),
                ("tools_experience", models.JSONField(default=list)),
                ("award_recognitions", models.JSONField(default=list)),
                (
                    "profile",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="personal_info",
                        to="userprofile.profile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MedicalInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("health_conditions", models.JSONField(default=list)),
                ("medications", models.JSONField(default=list)),
                ("disability_status", models.CharField(blank=True, max_length=50)),
                (
                    "disability_type",
                    models.CharField(blank=True, default="None", max_length=50),
                ),
                (
                    "profile",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="medical_info",
                        to="userprofile.profile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Media",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "video",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="profile_videos/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["mp4", "avi", "mov", "mkv"]
                            )
                        ],
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="profile_photos/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "jpeg", "png", "gif"]
                            )
                        ],
                    ),
                ),
                (
                    "profile",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="media",
                        to="userprofile.profile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IdentityVerification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("id_type", models.CharField(blank=True, max_length=50)),
                ("id_number", models.CharField(blank=True, max_length=50)),
                ("id_expiry_date", models.DateField(blank=True, null=True)),
                (
                    "id_front",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="id_fronts/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "jpeg", "png", "gif"]
                            )
                        ],
                    ),
                ),
                (
                    "id_back",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="id_backs/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "jpeg", "png", "gif"]
                            )
                        ],
                    ),
                ),
                ("id_verified", models.BooleanField(default=False)),
                (
                    "profile",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="identity_verification",
                        to="userprofile.profile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Education",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("education_level", models.CharField(blank=True, max_length=50)),
                ("degree_type", models.CharField(blank=True, max_length=50)),
                ("field_of_study", models.CharField(blank=True, max_length=100)),
                ("graduation_year", models.CharField(blank=True, max_length=4)),
                ("gpa", models.FloatField(blank=True, null=True)),
                ("institution_name", models.CharField(blank=True, max_length=100)),
                ("scholarships", models.JSONField(default=list)),
                ("academic_achievements", models.JSONField(default=list)),
                ("certifications", models.JSONField(default=list)),
                ("online_courses", models.JSONField(default=list)),
                (
                    "profile",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="education",
                        to="userprofile.profile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ContactInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "address",
                    models.CharField(help_text="Address (required)", max_length=200),
                ),
                (
                    "specific_area",
                    models.CharField(
                        help_text="Specific area (required)", max_length=200
                    ),
                ),
                ("city", models.CharField(help_text="City (required)", max_length=100)),
                (
                    "region",
                    models.CharField(help_text="Region (required)", max_length=50),
                ),
                (
                    "country",
                    models.CharField(help_text="Country (required)", max_length=2),
                ),
                (
                    "housing_status",
                    models.CharField(
                        choices=[
                            ("own", "Own"),
                            ("rent", "Rent"),
                            ("live_with_family", "Live with Family"),
                            ("other", "Other"),
                        ],
                        help_text="Housing status (required)",
                        max_length=50,
                    ),
                ),
                (
                    "residence_duration",
                    models.CharField(
                        choices=[
                            ("less_than_1", "<1 year"),
                            ("1_to_3", "1-3 years"),
                            ("3_to_5", "3-5 years"),
                            ("5_to_10", "5-10 years"),
                            ("more_than_10", ">10 years"),
                        ],
                        help_text="Duration of residence (required)",
                        max_length=50,
                    ),
                ),
                (
                    "emergency_contact",
                    models.CharField(
                        help_text="Emergency contact name (required)", max_length=100
                    ),
                ),
                (
                    "emergency_phone",
                    models.CharField(
                        help_text="Emergency contact phone number starting with +251 followed by 9 digits (required)",
                        max_length=17,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must start with +251 followed by exactly 9 digits.",
                                regex="^\\+251\\d{9}$",
                            )
                        ],
                    ),
                ),
                (
                    "profile",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contact_info",
                        to="userprofile.profile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VerificationAuditLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("previous_status", models.BooleanField()),
                ("new_status", models.BooleanField()),
                ("changed_at", models.DateTimeField(auto_now_add=True)),
                ("verification_type", models.CharField(max_length=50)),
                ("verification_method", models.CharField(max_length=50)),
                ("notes", models.TextField(blank=True)),
                ("ip_address", models.GenericIPAddressField(null=True)),
                ("user_agent", models.TextField(blank=True)),
                (
                    "changed_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="verification_logs",
                        to="userprofile.profile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Verification Audit Log",
                "verbose_name_plural": "Verification Audit Logs",
                "ordering": ["-changed_at"],
            },
        ),
        migrations.CreateModel(
            name="VerificationStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_verified", models.BooleanField(default=False)),
                ("verification_type", models.CharField(max_length=50)),
                ("verification_date", models.DateTimeField(auto_now_add=True)),
                ("verification_method", models.CharField(max_length=50)),
                ("verification_notes", models.TextField(blank=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "profile",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="verification_status",
                        to="userprofile.profile",
                    ),
                ),
                (
                    "verified_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WorkExperience",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("years_of_experience", models.CharField(blank=True, max_length=50)),
                ("employment_status", models.CharField(blank=True, max_length=50)),
                ("previous_employers", models.JSONField(default=list)),
                ("projects", models.JSONField(default=list)),
                ("training", models.JSONField(default=list)),
                ("internship_experience", models.CharField(blank=True, max_length=50)),
                (
                    "profile",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="work_experience",
                        to="userprofile.profile",
                    ),
                ),
            ],
        ),
    ]
