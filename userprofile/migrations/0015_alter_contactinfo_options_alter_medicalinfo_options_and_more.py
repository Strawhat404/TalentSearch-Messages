# Generated by Django 5.2.1 on 2025-06-26 16:36

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("userprofile", "0014_remove_choice_models"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="contactinfo",
            options={
                "verbose_name": "Contact Information",
                "verbose_name_plural": "Contact Information",
            },
        ),
        migrations.AlterModelOptions(
            name="medicalinfo",
            options={
                "verbose_name": "Medical Information",
                "verbose_name_plural": "Medical Information",
            },
        ),
        migrations.AlterModelOptions(
            name="physicalattributes",
            options={
                "verbose_name": "Physical Attributes",
                "verbose_name_plural": "Physical Attributes",
            },
        ),
        migrations.RemoveField(
            model_name="contactinfo",
            name="emergency_contact",
        ),
        migrations.RemoveField(
            model_name="contactinfo",
            name="emergency_phone",
        ),
        migrations.RemoveField(
            model_name="medicalinfo",
            name="health_conditions",
        ),
        migrations.RemoveField(
            model_name="medicalinfo",
            name="medications",
        ),
        migrations.RemoveField(
            model_name="personalinfo",
            name="custom_hobby",
        ),
        migrations.RemoveField(
            model_name="personalinfo",
            name="date_of_birth",
        ),
        migrations.RemoveField(
            model_name="personalinfo",
            name="gender",
        ),
        migrations.RemoveField(
            model_name="personalinfo",
            name="hobbies",
        ),
        migrations.RemoveField(
            model_name="personalinfo",
            name="marital_status",
        ),
        migrations.RemoveField(
            model_name="personalinfo",
            name="nationality",
        ),
        migrations.RemoveField(
            model_name="physicalattributes",
            name="body_type",
        ),
        migrations.RemoveField(
            model_name="physicalattributes",
            name="eye_color",
        ),
        migrations.RemoveField(
            model_name="physicalattributes",
            name="gender",
        ),
        migrations.RemoveField(
            model_name="physicalattributes",
            name="hair_color",
        ),
        migrations.RemoveField(
            model_name="physicalattributes",
            name="height",
        ),
        migrations.RemoveField(
            model_name="physicalattributes",
            name="piercings_visible",
        ),
        migrations.RemoveField(
            model_name="physicalattributes",
            name="skin_tone",
        ),
        migrations.RemoveField(
            model_name="physicalattributes",
            name="tattoos_visible",
        ),
        migrations.RemoveField(
            model_name="physicalattributes",
            name="weight",
        ),
        migrations.RemoveField(
            model_name="professionalqualifications",
            name="has_driving_license",
        ),
        migrations.RemoveField(
            model_name="profile",
            name="nationality",
        ),
        migrations.AddField(
            model_name="contactinfo",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True, default=django.utils.timezone.now
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="contactinfo",
            name="updated_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="medicalinfo",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True, default=django.utils.timezone.now
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="medicalinfo",
            name="updated_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="physicalattributes",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True, default=django.utils.timezone.now
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="physicalattributes",
            name="updated_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.CreateModel(
            name="BasicInformation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nationality",
                    models.CharField(help_text="Nationality", max_length=100),
                ),
                ("gender", models.CharField(help_text="Gender", max_length=20)),
                (
                    "languages",
                    models.JSONField(default=list, help_text="Languages spoken"),
                ),
                ("hair_color", models.CharField(help_text="Hair color", max_length=50)),
                ("eye_color", models.CharField(help_text="Eye color", max_length=50)),
                ("skin_tone", models.CharField(help_text="Skin tone", max_length=50)),
                ("body_type", models.CharField(help_text="Body type", max_length=50)),
                (
                    "medical_condition",
                    models.JSONField(default=list, help_text="Medical conditions"),
                ),
                (
                    "medicine_type",
                    models.JSONField(default=list, help_text="Types of medicine"),
                ),
                (
                    "marital_status",
                    models.CharField(help_text="Marital status", max_length=20),
                ),
                ("hobbies", models.JSONField(default=list, help_text="Hobbies")),
                ("date_of_birth", models.DateField(help_text="Date of birth")),
                (
                    "height",
                    models.DecimalField(
                        decimal_places=1,
                        help_text="Height in centimeters",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(
                                100, message="Height must be at least 100 cm"
                            ),
                            django.core.validators.MaxValueValidator(
                                300, message="Height cannot exceed 300 cm"
                            ),
                        ],
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=1,
                        help_text="Weight in kilograms",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(
                                30, message="Weight must be at least 30 kg"
                            ),
                            django.core.validators.MaxValueValidator(
                                500, message="Weight cannot exceed 500 kg"
                            ),
                        ],
                    ),
                ),
                (
                    "emergency_contact_name",
                    models.CharField(
                        help_text="Emergency contact name", max_length=100
                    ),
                ),
                (
                    "emergency_contact_phone",
                    models.CharField(
                        help_text="Emergency contact phone (must start with +251)",
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must start with +251 followed by 9 digits",
                                regex="^\\+251\\d{9}$",
                            )
                        ],
                    ),
                ),
                (
                    "custom_hobby",
                    models.CharField(
                        blank=True, help_text="Custom hobby", max_length=100
                    ),
                ),
                (
                    "driving_license",
                    models.BooleanField(default=False, help_text="Has driving license"),
                ),
                (
                    "visible_piercings",
                    models.BooleanField(
                        default=False, help_text="Has visible piercings"
                    ),
                ),
                (
                    "visible_tattoos",
                    models.BooleanField(default=False, help_text="Has visible tattoos"),
                ),
                (
                    "willing_to_travel",
                    models.CharField(
                        choices=[("Yes", "Yes"), ("No", "No")],
                        help_text="Willingness to travel",
                        max_length=3,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "profile",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="basic_information",
                        to="userprofile.profile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Basic Information",
                "verbose_name_plural": "Basic Information",
            },
        ),
    ]
