# Generated by Django 5.2 on 2025-05-01 12:58

import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NewsImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Upload an image for the news gallery.', upload_to='news_images/')),
                ('caption', models.CharField(blank=True, help_text='Optional caption for the image.', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter a concise news title (max 255 characters).', max_length=255)),
                ('content', models.TextField(help_text='Provide the full news content.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Auto-set creation date.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Auto-set update date.')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', help_text='Current status of the news.', max_length=20)),
                ('created_by', models.ForeignKey(help_text='User who created the news.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='Add relevant tags for categorization.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('image_gallery', models.ManyToManyField(blank=True, help_text='Select images for the gallery.', to='news.newsimage')),
            ],
        ),
    ]
